// Generated by CoffeeScript 1.7.1
var Insight2png, filename, fs, system, url, webpage;

webpage = require("webpage");

system = require("system");

fs = require("fs");

module.exports = Insight2png = (function() {
  function Insight2png(url, filename, response, callbacks) {
    this.url = url;
    this.filename = filename;
    this.response = response;
    this.callbacks = callbacks;
  }

  Insight2png.prototype.run = function() {
    var chartTimeout, getImage, start;
    getImage = (function(_this) {
      return function() {
        var error, imgData;
        try {
          return imgData = _this.renderPage(_this.page, _this.filename);
        } catch (_error) {
          error = _error;
          return _this.response.error = error;
        } finally {
          if (imgData != null) {
            if (_this.callbacks.success != null) {
              return _this.callbacks.success(imgData, _this.response);
            }
            phantom.exit(0);
          } else {
            error = _this.response.error || "No insight on page";
            if (_this.callbacks.error != null) {
              return _this.callbacks.error(error, _this.response);
            }
          }
        }
      };
    })(this);
    start = new Date();
    this.page = webpage.create();
    this.page.settings.userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17';
    this.page.customHeaders = {
      Referer: this.url
    };
    this.page.viewportSize = {
      width: 800,
      height: 800
    };
    this.page.onCallback = (function(_this) {
      return function() {
        clearTimeout(chartTimeout);
        _this.response.log += "Visualization loaded\n";
        if (_this.url.match(/weekly_graph$/)) {
          return setTimeout(function() {
            return getImage();
          }, 1500);
        } else if (_this.url.match(/insight_tester.+&preview=1/)) {
          return setTimeout(function() {
            return getImage();
          }, 100);
        } else {
          return getImage();
        }
      };
    })(this);
    chartTimeout = null;
    this.page.onResourceError = (function(_this) {
      return function(resourceError) {
        _this.page.reason = resourceError.errorString;
        return _this.page.reason_url = resourceError.url;
      };
    })(this);
    return this.page.open(this.url, (function(_this) {
      return function(status) {
        var vis;
        if (status !== "success") {
          _this.response.log += "Unable to open URL: " + _this.page.reason_url + "\n" + _this.page.reason + "\n";
          if (_this.callbacks.error != null) {
            return _this.callbacks.error("Unable to open URL", _this.response);
          }
          return phantom.exit(1);
        } else {
          vis = _this.page.evaluate(function() {
            return google.visualization;
          });
          if ((vis != null) || _this.url.match(/insight_tester.+&preview=1/)) {
            return chartTimeout = setTimeout(getImage, 6e3);
          } else {
            return getImage();
          }
        }
      };
    })(this));
  };

  Insight2png.prototype.renderPage = function() {
    var buffer, crop, offset;
    if (!this.page.evaluate(function() {
      return $('.insight').length;
    })) {
      return null;
    }
    this.page.evaluate(function() {
      var brand, brandContainer, brandHeightGrowth, height, moreText;
      $('.user-name, .user-text').css('font-size', '14.25px');
      $('.panel-body-inner p').css('font-size', '14.25px');
      $('.panel-title').css('font-weight', 'bold');
      $('.panel-subtitle').css('font-weight', 'lighter').css('font-size', '14.5px');
      $('body').css('font', 'helvetica');
      $('.insight-metadata').css('font-size', '12.5px');
      $('.tweet-action.tweet-action-permalink').css('font-size', '12.5px');
      $('.userpic-featured').css('z-index', 10);
      $('.insight').css({
        'margin-top': 500,
        'margin-bottom': 500
      });
      brand = "https://thinkup.thinkup.com/assets/img/thinkup-logo-white.png";
      if (window.location.href.match(/square=1/)) {
        brandHeightGrowth = 20;
        moreText = '<div style="position: absolute; bottom: 9px; left: 10px; color: white; font-family: tablet-gothic-semi-condensed, sans-serif;">thinkup.com</div>';
      } else {
        brandHeightGrowth = 0;
        moreText = "";
      }
      if ($('.insight').height() - $('.panel-title').height() < 50) {
        $('.panel-title').height($('.panel-title').height() + 50);
      }
      height = $('.panel.insight').outerHeight() - 45;
      brandContainer = "<div style=\"position:absolute; top: " + (height - brandHeightGrowth) + "px; height: " + (40 + brandHeightGrowth) + "px;background: rgba(0, 0, 0, 0.1);width: 100%;left: 0;right: 0;\">  <img class=\"insight-brand\" style=\"height: 22px; position: absolute; top: 11px; left: 10px;\" src=\"" + brand + "\">" + moreText + "</div>";
      return $('.panel-heading').append($(brandContainer));
    });
    offset = this.page.evaluate(function() {
      return $('.insight').offset();
    });
    crop = this.getImageDimensions('.insight');
    if (this.instagramShare()) {
      if (crop.width > crop.height) {
        buffer = crop.width - crop.height;
        crop.height += buffer;
        offset.top -= Math.round(buffer / 2);
        if (offset.top < 0) {
          this.page.evaluate(function() {
            return $('.insight').css({
              'margin-top': buffer,
              'margin-bottom': buffer
            });
          });
          offset.top = 0;
        }
      } else if (crop.width < crop.height) {
        buffer = crop.height - crop.width;
        crop.width += buffer;
        offset.left -= Math.round(buffer / 2);
      }
    }
    this.page.clipRect = {
      top: offset.top,
      left: offset.left,
      width: crop.width,
      height: crop.height
    };
    this.response.log += 'Rendering page: ';
    this.response.log += this.filename;
    this.page.render("screenshots/" + this.filename);
    return this.page.renderBase64('png');
  };

  Insight2png.prototype.readFile = function() {
    var start;
    start = new Date();
    this.page = webpage.create();
    this.page.viewportSize = {
      width: 1000,
      height: 1000
    };
    this.url = "" + fs.workingDirectory + "/screenshots/" + this.filename;
    return this.page.open(this.url, (function(_this) {
      return function(status) {
        var error, imgData, size;
        if (status !== "success") {
          if (_this.callbacks.error != null) {
            return _this.callbacks.error("Unable to open URL", _this.response);
          }
          return phantom.exit(1);
        } else {
          try {
            size = _this.getImageDimensions('img');
            if ((_this.callbacks.error != null) && (size == null)) {
              return _this.callbacks.error("No image found on page", _this.response);
            }
            _this.page.viewportSize = {
              width: size.width,
              height: size.height
            };
            return imgData = _this.page.renderBase64('png');
          } catch (_error) {
            error = _error;
            return _this.response.error = error;
          } finally {
            if (imgData != null) {
              if (_this.callbacks.success != null) {
                return _this.callbacks.success(imgData, _this.response);
              }
              phantom.exit(0);
            } else {
              error = _this.response.error || "No image on page";
              if (_this.callbacks.error != null) {
                return _this.callbacks.error(error, _this.response);
              }
            }
          }
        }
      };
    })(this));
  };

  Insight2png.prototype.getImageDimensions = function(selector) {
    var size;
    return size = this.page.evaluate(function(selector) {
      var insight, offset;
      insight = document.querySelector(selector);
      if (insight == null) {
        return null;
      }
      return offset = {
        height: insight.offsetHeight,
        width: insight.offsetWidth
      };
    }, selector);
  };

  Insight2png.prototype.logTime = function(start) {
    var end;
    end = new Date();
    return console.log("" + ((end - start) / 1000) + " seconds\n");
  };

  Insight2png.prototype.instagramShare = function() {
    return this.url.match(/square=1/) != null;
  };

  return Insight2png;

})();

if (!system.args[0].match(/server\.js/)) {
  if (system.args.length < 2 || system.args.length > 3) {
    console.log("Usage: insight2png URL filename");
    phantom.exit(1);
  } else {
    url = system.args[1];
    filename = system.args[2];
    new Insight2png(url, filename).run();
  }
}
