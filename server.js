// Generated by CoffeeScript 1.7.1
(function() {
  var Insight2png, TU_REGEX, close, domain, fourOhFour, fs, handleImageResponse, hashCode, logTime, port, server, system, writeImageToClient;

  system = require("system");

  server = require("webserver").create();

  Insight2png = require('insight2png');

  fs = require('fs');

  TU_REGEX = /^https:\/\/.+\.thinkup\.com\/\?u=/;

  if (system.args.length < 2 || system.args.length > 3) {
    domain = "localhost";
    port = 8080;
  } else {
    domain = system.args[1];
    port = system.args[2];
  }

  console.log("Server is running on " + domain + ":" + port + "\n");

  server.listen("" + domain + ":" + port, function(request, response) {
    var filename, insight2png, url;
    if (request.url === '/favicon.ico') {
      return;
    }
    response.start = new Date();
    if (request.url.match(/^\/insight/)) {
      url = request.queryString.split('url=')[1];
      console.log(url);
      if (!((url != null) && url.match(TU_REGEX))) {
        return fourOhFour(response, url);
      }
      filename = "" + (hashCode(url)) + ".png";
      insight2png = new Insight2png(url, filename, response);
      if (fs.exists("screenshots/" + filename)) {
        console.log("Screenshot exists; returning image");
        return insight2png.readFile(handleImageResponse);
      } else {
        console.log("First request; generating " + filename);
        return insight2png.run(handleImageResponse);
      }
    } else {
      return fourOhFour(response);
    }
  });

  handleImageResponse = {
    success: function(imgData, response) {
      return writeImageToClient(response, imgData);
    },
    error: function(error, response) {
      console.log("Something went wrong: " + error);
      return fourOhFour(response, error);
    }
  };

  writeImageToClient = function(response, imgData) {
    response.writeHead(200, {
      'Content-Type': 'image/png'
    });
    response.setEncoding('binary');
    response.write(atob(imgData));
    return close(response);
  };

  fourOhFour = function(response, url) {
    if (url == null) {
      url = "No url requested";
    }
    console.log("404:");
    console.log("Requested url:");
    console.log("" + url);
    response.statusCode = 404;
    response.write('<!DOCTYPE html>\n<html><head><meta charset="utf-8"><title>404</title></head><body>404: Resource not found</body></html>');
    return close(response);
  };

  close = function(response) {
    logTime(response.start);
    return response.close();
  };

  logTime = function(start) {
    return console.log("" + ((new Date() - start) / 1000) + " seconds\n");
  };

  hashCode = function(s) {
    return s.split("").reduce(function(a, b) {
      a = ((a << 5) - a) + b.charCodeAt(0);
      return a & a;
    }, 0);
  };

}).call(this);
